{"version":3,"file":"main.06f0421c623fcb257379.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,uDAAe,KAAK;;AC5Be;AAC2B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA,8BAA8B,gBAAK;AACnC;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA,aAAa;AACbaAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,YAAY;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gBAAK;AACb,oDAAoD,gBAAK;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AC9LqB;AACa;AACY;AACD;AAC9C;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,QAAQ,WAAW;AACnB,QAAQ,WAAW;AACnB,oBAAoB,WAAW;AAC/B;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA,CAAC;AACD,wB","sources":["webpack://to-do-list/./src/localStorage.js","webpack://to-do-list/./src/toDoFunctions.js","webpack://to-do-list/./src/index.js"],"sourcesContent":["// import * as n from './index.js'\r\n// localStorage.clear();\r\nlet tasks = JSON.parse(localStorage.getItem(\"tasks\")) || {\r\n    \"home\": [],\r\n    \"day\": [],\r\n    \"week\": [],\r\n    \"gym\":[],\r\n    \"study\":[],\r\n    \"groceries\":[],\r\n    \"notes\":[]\r\n\r\n};\r\nlocalStorage.setItem(\"tasks\",JSON.stringify(tasks));\r\n// if (!localStorage.getItem(\"tasks\")) {\r\n    \r\n// }\r\n\r\n// export tasks;\r\nexport function fetchStorage()\r\n{\r\n    tasks = JSON.parse(localStorage.getItem(\"tasks\"));\r\n    return tasks;\r\n}\r\nexport function currentSpaceTodos(name)\r\n{\r\n    // tasks = \r\n    return tasks[name];\r\n}\r\nexport default tasks;","import tasks from \"./localStorage\";\r\nimport {currentSpaceTodos,fetchStorage} from './localStorage';\r\nconst taskN = document.querySelector('.add-task-input-container input');\r\nconst taskD = document.querySelector('.add-task-desc input');\r\nconst taskDDate = document.querySelector('.add-task-date-edit input');\r\nlet taskPrio = document.querySelector('.add-task-priority input:checked');\r\n// let deletebuttons = document.querySelectorAll('.')\r\nlet currentWorkingSpace = \"home\";\r\n\r\n\r\nconst taskContainer = document.querySelector('.todo-tasks-container');\r\nexport const toDoManager =(function () {\r\n    function loadToDos()\r\n    {\r\n        taskContainer.textContent = \"\";\r\n        let space = currentWorkingSpaceGetter();\r\n        console.log(currentSpaceTodos(space));\r\n        if(space==\"home\"){\r\n            for(const name in tasks)\r\n            {\r\n                console.log(name);\r\n                currentSpaceTodos(name).forEach((el,i)=>{\r\n                    let todoToAdd = createToDo(el.name,el.desc,el.priority,el.dueDate,name,i);\r\n                    taskContainer.appendChild(todoToAdd);\r\n                });\r\n            }\r\n        }\r\n        \r\n        else{\r\n            currentSpaceTodos(space).forEach((el,i)=>{\r\n                let todoToAdd = createToDo(el.name,el.desc,el.priority,el.dueDate,space,i);\r\n                taskContainer.appendChild(todoToAdd);\r\n            });\r\n        }\r\n    }\r\n\r\n    function currentWorkingSpaceSetter(newspace) {\r\n        currentWorkingSpace = newspace;\r\n    }\r\n    function currentWorkingSpaceGetter() {\r\n        return currentWorkingSpace;\r\n    }\r\n    function createToDo(name=\"name\",desc=\"demo\",priority=\"high\",date=\"20/10/2003\",type,index)\r\n    {\r\n        // task tile for each task\r\n        let taskBox = document.createElement('div');\r\n        taskBox.className = \"task-tile\";\r\n        taskBox.setAttribute(\"data-index\",index);\r\n        taskBox.setAttribute(\"data-projectType\",type);\r\n\r\n        // task tile checkbox container\r\n        let taskCheckBoxContainer = document.createElement('div');\r\n        taskCheckBoxContainer.className = \"task-status-container\";\r\n        // task checkbox\r\n        let taskCheckBox = document.createElement('div');\r\n        taskCheckBox.className = \"task-status\";\r\n        // appending taskstatus into its container\r\n        taskCheckBoxContainer.appendChild(taskCheckBox); \r\n\r\n\r\n        // task name and description\r\n        let taskNameDesc = document.createElement('div');\r\n        taskNameDesc.className = \"task-info-container\";\r\n        // task name or heading\r\n        let taskName = document.createElement('p');\r\n        taskName.className = \"task-name\";\r\n        // taskName.textContent = taskN.value;\r\n        // taskName.textContent = el.name;\r\n        taskName.textContent = name;\r\n        // task description\r\n        let taskDesc = document.createElement('p');\r\n        taskDesc.className = \"task-desc\";\r\n        // taskDesc.textContent= taskD.value;\r\n        // taskDesc.textContent= el.desc;\r\n        taskDesc.textContent= desc;\r\n        // appending name and desc into its container\r\n        taskNameDesc.appendChild(taskName);\r\n        taskNameDesc.appendChild(taskDesc);\r\n        \r\n\r\n\r\n        // task tile buttons container\r\n        let taskButtonContainer = document.createElement('div');\r\n        taskButtonContainer.className = \"task-button-container\";\r\n        // task delete button\r\n        let taskDelete = document.createElement('div');\r\n        taskDelete.className = \"task-delete-button\";\r\n        let span = document.createElement('span');\r\n        span.className = \"iconify\";\r\n        span.setAttribute(\"data-icon\",\"ph:x\");\r\n        // appending delete button into its container\r\n        taskDelete.appendChild(span);\r\n        taskDelete.addEventListener('click',removeTask.bind(taskDelete));\r\n        taskButtonContainer.appendChild(taskDelete);\r\n        \r\n        // task due date container\r\n        let dueDateContainer = document.createElement('div');\r\n        dueDateContainer.className = \"task-due-container\";\r\n        // task due date\r\n        let taskDate = document.createElement('p');\r\n        taskDate.className = \"task-due-date\";\r\n        // taskDate.textContent = taskDDate.value;\r\n        // taskDate.textContent = el.dueDate;\r\n        taskDate.textContent = date;\r\n        // appending task delete into its container\r\n        dueDateContainer.appendChild(taskDate);\r\n\r\n\r\n        // task priority\r\n        let taskPriority = document.createElement('div');\r\n        taskPriority.className = \"task-priority\";\r\n\r\n        // setting classname by priority\r\n        // taskPrio = document.querySelector('.add-task-priority input:checked');\r\n        switch (priority) {\r\n            case \"high\":\r\n                taskPriority.classList.add('highPriority');\r\n                break;\r\n\r\n            case \"med\":\r\n                taskPriority.classList.add('midPriority');\r\n                break;\r\n                \r\n            default:\r\n                taskPriority.classList.add('lowPriority');\r\n                break;\r\n        }\r\n\r\n        \r\n        // appening all children to the parent(task-tile) container\r\n        [taskCheckBoxContainer,\r\n        taskNameDesc,\r\n        taskButtonContainer,\r\n        dueDateContainer,\r\n        taskPriority].forEach(e=>{\r\n                taskBox.appendChild(e);\r\n            });\r\n\r\n            return taskBox;\r\n    }\r\n\r\n    function Addtodo()\r\n    {\r\n        taskPrio = document.querySelector('.add-task-priority input:checked');\r\n        let space = currentWorkingSpaceGetter();\r\n        // adding to the storage\r\n        populateStorage(taskN.value,taskD.value,taskPrio.value,taskDDate.value,currentWorkingSpaceGetter());\r\n        fetchStorage();\r\n        // create a todo\r\n        let todoToAdd = createToDo(taskN.value,taskD.value,taskPrio.value,taskDDate.value,currentWorkingSpaceGetter());\r\n        // adding to the page\r\n        taskContainer.appendChild(todoToAdd);\r\n\r\n\r\n    }\r\n\r\n    function removeTask() {\r\n        console.log(typeof +this.parentElement.parentElement.getAttribute(\"data-index\"));\r\n        let index = +this.parentElement.parentElement.getAttribute(\"data-index\");\r\n        // typeof this.parentElement.parentElement.getAttribute(\"data-index\");\r\n        taskContainer.removeChild(this.parentElement.parentElement);\r\n        tasks[this.parentElement.parentElement.getAttribute(\"data-projectType\")].splice(index,1);\r\n        localStorage.setItem(\"tasks\",JSON.stringify(tasks));\r\n    }\r\n\r\n\r\n\r\n    function populateStorage(name,desc,priority,date,type,status=\"pending\")\r\n    {\r\n        const tasks = JSON.parse(localStorage.getItem(\"tasks\"));\r\n        console.log(tasks);\r\n        tasks[type].push({\r\n            \"name\":name,\r\n            \"desc\":desc,\r\n            \"priority\":priority,\r\n            \"dueDate\":date,\r\n            \"type\":type,\r\n            \"status\": status\r\n        });\r\n        localStorage.setItem(\"tasks\",JSON.stringify(tasks));\r\n    }\r\n\r\n    return {\r\n        loadToDos,\r\n        createToDo,\r\n        Addtodo,\r\n        currentWorkingSpaceGetter,\r\n        currentWorkingSpaceSetter,\r\n        removeTask\r\n    }\r\n}());","import './styles.css';\r\nimport tasks from './localStorage';\r\nimport currentSpaceTodos from './localStorage';\r\nimport { toDoManager } from './toDoFunctions';\r\n\r\n// console.log('ritik gandu');\r\nlet a = document.querySelector('.add-task-container');\r\nlet d = document.querySelector('.add-task-input-container input');\r\nlet navButtons = document.querySelectorAll(\".todo-navigation-link-container\");\r\ntoDoManager.loadToDos();\r\n// console.log(navButtons);\r\nnavButtons.forEach((e)=>{\r\n    e.addEventListener('click',function(){\r\n        // console.log(this.children[0].id);\r\n        toDoManager.currentWorkingSpaceSetter(this.children[0].id);\r\n        toDoManager.loadToDos();\r\n        console.log(toDoManager.currentWorkingSpaceGetter());\r\n        \r\n    });\r\n})\r\n\r\nd.addEventListener('keydown', (e) => {\r\n    // console.log(d.value);\r\n    if(e.keyCode === 13)\r\n    {\r\n        let task = document.createElement('p');\r\n        let s = d.value.trim();\r\n        // s=s.trim();\r\n        \r\n        if(s.length>0)\r\n        {\r\n            // task.textContent = s;\r\n            // b.appendChild(task);\r\n            toDoManager.Addtodo();\r\n        }\r\n        d.value = \"\";\r\n        \r\n    }\r\n});\r\n// localStorage.clear();"],"names":[],"sourceRoot":""}